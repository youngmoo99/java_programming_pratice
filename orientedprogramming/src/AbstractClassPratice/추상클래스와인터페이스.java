package AbstractClassPratice;

public class 추상클래스와인터페이스 {

	public static void main(String[] args) {
		// 추상클래스는 인스턴스를 가질 수 없다.
		// 추상 메서드 = 메서드 정의가 없는 메서드
		// 인터페이스 추상클래스 비교 
		// 인터페이스를 사용하기 좋을떄 
		// 두 시스템 사이에 소통하길 원할때 혹은 두 클래스 아니면 두 부속이 서로 소통하길 바랄때 
		// 한쪽에서는 구현을 제공하고  다른한쪽에서는 인터페이스를 소비 
		
		//추상클래스는 
		// 높은 단계의 구조를 제공하고 싶어할때 사용 
		// 구현의 세세한 부분들을 하위 클래스에게 맡기고 싶을때 
		// 상속을 사용해야함 
		// 하위클래스들과 추상 클래스인 상위 클래스사이에서 관계가 성립 
		
		//문법적 차이점 
		// 인터페이스
		// 인터페이스 안에서는 private 선언불가
		// 인터페이스 안에는 모든게 public
		// 변수들을 넣을 수 없음

		// 추상클래스
		// 하지만 추상 메소드안에는 private 가능
		// 변수 넣기 가능
		// 클래스는 여러 인터페이스를 구현할 수 있음 단,
		// 여러 추상적 클래스들을 연장할 수는 없음 즉 두 다른 클래스에서 상속받을수 없다
		
		
	}

}
